{"ast":null,"code":"import { YouTube } from 'popyt';\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    }\n  } = req;\n  const secrets = {\n    key: 'AIzaSyCSp1D7kTrcqNhY2Py_-6qGs1iBixkDr1o',\n    channelId: 'UCQ_dGc7VM1kYl19K0viWW4A'\n  };\n  const {\n    key,\n    channelId\n  } = secrets;\n  const youtube = new YouTube(key);\n  const playlists = await youtube.getChannelPlaylists(channelId);\n  const formatted = playlists.forEach(item => console.log('data', item.id, 'title', item.title));\n  const test = playlists.map(item => ({\n    id: item.id,\n    title: item.title\n  }));\n  res.status(200).json({\n    test\n  });\n});","map":{"version":3,"sources":["/Users/acampora/personal/frontend-topics-v2/pages/api/all-videos-en.js"],"names":["YouTube","req","res","query","id","secrets","key","channelId","youtube","playlists","getChannelPlaylists","formatted","forEach","item","console","log","title","test","map","status","json"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AACLC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AADF,MAEFH,GAFJ;AAIA,QAAMI,OAAO,GAAG;AACfC,IAAAA,GAAG,EAAE,yCADU;AAEfC,IAAAA,SAAS,EAAE;AAFI,GAAhB;AAKA,QAAM;AAAED,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAqBF,OAA3B;AAEA,QAAMG,OAAO,GAAG,IAAIR,OAAJ,CAAYM,GAAZ,CAAhB;AAEA,QAAMG,SAAS,GAAG,MAAMD,OAAO,CAACE,mBAAR,CAA4BH,SAA5B,CAAxB;AAEA,QAAMI,SAAS,GAAGF,SAAS,CAACG,OAAV,CAAkBC,IAAI,IACvCC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAAI,CAACT,EAAzB,EAA6B,OAA7B,EAAsCS,IAAI,CAACG,KAA3C,CADiB,CAAlB;AAIA,QAAMC,IAAI,GAAGR,SAAS,CAACS,GAAV,CAAcL,IAAI,KAAK;AAAET,IAAAA,EAAE,EAAES,IAAI,CAACT,EAAX;AAAeY,IAAAA,KAAK,EAAEH,IAAI,CAACG;AAA3B,GAAL,CAAlB,CAAb;AAEAd,EAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEH,IAAAA;AAAF,GAArB;AACA,CAvBD","sourcesContent":["import { YouTube } from 'popyt';\n\nexport default async (req, res) => {\n\tconst {\n\t\tquery: { id },\n\t} = req;\n\n\tconst secrets = {\n\t\tkey: 'AIzaSyCSp1D7kTrcqNhY2Py_-6qGs1iBixkDr1o',\n\t\tchannelId: 'UCQ_dGc7VM1kYl19K0viWW4A',\n\t};\n\n\tconst { key, channelId } = secrets;\n\n\tconst youtube = new YouTube(key);\n\n\tconst playlists = await youtube.getChannelPlaylists(channelId);\n\n\tconst formatted = playlists.forEach(item =>\n\t\tconsole.log('data', item.id, 'title', item.title),\n\t);\n\n\tconst test = playlists.map(item => ({ id: item.id, title: item.title }));\n\n\tres.status(200).json({ test });\n};\n"]},"metadata":{},"sourceType":"module"}